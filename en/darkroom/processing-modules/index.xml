<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>processing modules on darktable user manual</title>
    <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/</link>
    <description>Recent content in processing modules on darktable user manual</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>module header</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/module-header/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/module-header/</guid>
      <description>At the top of each processing module is the module header.&#xA;Click on the module name to expand the module and display the parameters that control its operation.&#xA;By default darktable will only allow one processing module to be expanded at a time &amp;ndash; if you click the header of another module, the previously-opened module&amp;rsquo;s controls are collapsed. If you want to expand more than one module, you may expand further modules by Shift+clicking on the header and all previously expanded modules will remain open.</description>
    </item>
    <item>
      <title>multiple instances</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/multiple-instances/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/multiple-instances/</guid>
      <description>Many of darktable&amp;rsquo;s modules can be applied more than once in the pixelpipe. Each instance of a module behaves independently, taking its input from the module below it in the pixelpipe and delivering its output to the next module.&#xA;As with the base instance of a module, all instances can be moved independently within the pixelpipe either by holding Ctrl+Shift while dragging &amp;amp; dropping or by choosing &amp;ldquo;move up&amp;rdquo; or &amp;ldquo;move down&amp;rdquo; in the multiple instances drop-down menu.</description>
    </item>
    <item>
      <title>presets</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/presets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/presets/</guid>
      <description>Presets allow you to store commonly-used module settings for future use. Some modules already come with pre-defined (internal) presets and you may also define your own (user-defined). Both internal and user-defined presets can be shown by clicking the presets menu in the module header.&#xA;Most of the functionality described here applies to processing modules only. However, presets can also be used with some utility modules. When used with utility modules, the functionality to auto-apply or auto-show presets based on image Exif data is not available.</description>
    </item>
    <item>
      <title>module controls</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/module-controls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/module-controls/</guid>
      <description>This section describes how to interact with processing module controls.&#xA;ðŸ”—sliders Sliders offer five different methods of interaction, depending on the level of control you require.&#xA;left-click (set) Click anywhere in the slider area to set the value. You can also click and drag to change it. You don&amp;rsquo;t have to aim for the triangle or even the line &amp;ndash; you can click anywhere in the entire height of the slider, including the label.</description>
    </item>
    <item>
      <title>curves</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/curves/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/curves/</guid>
      <description>The base curve, tone curve and rgb curve modules use curves to control the tones in the image. These modules have some common features that warrant separate discussion.&#xA;ðŸ”—nodes In their default state, curves are straight lines, defined by two anchor nodes at the top-right and bottom-left of the graph. You can move the nodes to modify the curve or generate new nodes by clicking on the curve. Ctrl+click to generate a new node at the x-location of the mouse pointer and the corresponding y-location of the current curve &amp;ndash; this adds a node without the risk of accidentally modifying the curve.</description>
    </item>
    <item>
      <title>wavelets</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/wavelets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/wavelets/</guid>
      <description>Wavelets are used to separate (or decompose) an image into a number of distinct layers, each containing a different level of detail. After decomposing an image in this way, a module can limit its processing to one or more of these detail layers, and then piece the layers back together again at the end to form its output. This allows us to be surgical about which features in the image we wish to impact when working with a module.</description>
    </item>
    <item>
      <title>deprecated modules</title>
      <link>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/deprecated/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/darkroom/processing-modules/deprecated/</guid>
      <description>The darktable team regularly reviews old modules and updates their implementation where issues are found or updated science means that they can be improved. Most of the time we try to update existing modules with new functionality but occasionally that becomes problematic, often due to the overhead of having to maintain multiple versions of the module. In such circumstances a new replacement module is created and the old module becomes deprecated.</description>
    </item>
  </channel>
</rss>
