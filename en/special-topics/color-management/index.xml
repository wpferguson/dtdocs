<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>color management on darktable user manual</title>
    <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/</link>
    <description>Recent content in color management on darktable user manual</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://darktable-org.github.io/dtdocs/en/special-topics/color-management/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/overview/</guid>
      <description>darktable employs a fully color managed workflow:&#xA;Input color specifications are taken from embedded or user-supplied ICC profiles or (in the case of raw files) from a library of camera-specific color matrices.&#xA;darktable automatically reads the display profile of your monitor (if properly configured) for accurate on-screen color rendition. Multiple-screen setups are fully supported as long as a system service like colord is in place and properly configured to inform darktable of the correct monitor profile.</description>
    </item>
    <item>
      <title>display profile</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/display-profile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/display-profile/</guid>
      <description>For darktable to faithfully render colors on screen it needs to find the correct display profile for your monitor. In general this requires your monitor to be properly calibrated and profiled, and it needs the profile to be correctly installed on your system. darktable queries your X display server&amp;rsquo;s xatom as well as the system service colord (if available) for the right profile. If required you can enforce a specific method in preferences &amp;gt; miscellaneous.</description>
    </item>
    <item>
      <title>rendering method</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/rendering-method/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/rendering-method/</guid>
      <description>darktable can render colors either with its own internal algorithms or by using the external library LittleCMS2. darktable&amp;rsquo;s internal method is, by an order of magnitude, faster than the external one. The external option gives you a choice of the rendering intent and might offer a slightly higher accuracy in some cases.&#xA;You can change the default method in preferences &amp;gt; processing &amp;gt; always use LittleCMS 2 to apply output color profile</description>
    </item>
    <item>
      <title>rendering intent</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/rendering-intent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/rendering-intent/</guid>
      <description>If rendering with LittleCMS2 is activated (see rendering method) you can define how to handle out-of-gamut colors when converting between color spaces. A selection box in the export, output color profile, and soft proof modules gives you a choice of the following rendering intents:&#xA;perceptual Best suited to photographs as it maintains the relative position of colors. This is usually the best choice. relative colorimetric Out-of-gamut colors are converted to colors having the same lightness, but different saturation.</description>
    </item>
    <item>
      <title>darktable&#39;s color spaces</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/color-spaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/color-spaces/</guid>
      <description>Input images are either RGB files (like JPEGs or TIFFs) or camera RAWs. Both store visual information as a combination of primary colors (e.g. red, green and blue) which together describe a light emission to be recreated by a display.&#xA;The following image illustrates this concept.&#xA;The left-hand-side of the image depicts a colored light that we need to represent digitally. We can use three ideal color filters to decompose this light into three colored primary lights at different intensities.</description>
    </item>
    <item>
      <title>unbounded colors</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/unbounded-colors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/unbounded-colors/</guid>
      <description>Screens and most image file formats can only encode RGB intensities confined within a certain range. For example, images encoded on 8 bits can only contain values from 0 to 255, images on 10 bits from 0 to 1023, and so onâ€¦ Graphic standards postulate that the maximum of that range, no matter its actual value, will always represent the maximum brightness that the display medium is able to render, usually between 100 and 160 Cd/mÂ² (or nits) depending on the actual standard.</description>
    </item>
    <item>
      <title>possible color artifacts</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/color-artifacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/color-artifacts/</guid>
      <description>There are some infrequent situations that still can lead to problematic results unless the user takes some action. Some modules in Lab color space, like levels and monochrome, rely on the fact that the L channels carries all lightness information, with the a and b channels purely representing chroma and hue. Unbounded colors with negative L values are especially problematic to these modules and can lead to black pixel artifacts.</description>
    </item>
    <item>
      <title>darktable&#39;s color dimensions</title>
      <link>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/color-dimensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://darktable-org.github.io/dtdocs/en/special-topics/color-management/color-dimensions/</guid>
      <description>This section defines the perceptual properties of color, both conceptually and quantitatively, in order to characterize and quantify the creative and corrective adjustments made to color in darktable.&#xA;ðŸ”—definitions Color properties like &amp;ldquo;saturation&amp;rdquo;, &amp;ldquo;brightness&amp;rdquo; or &amp;ldquo;lightness&amp;rdquo; have passed into common usage but are largely misused and often used to mean different things. In color science, each of these terms has a precise meaning.&#xA;There are two frameworks within which color properties may be analyzed and described:</description>
    </item>
  </channel>
</rss>
